{% extends 'base.html.twig' %}

{% block title %}Assurance{% endblock %}

{% block body %}
    <div class="row align-items-start">
       <div class="col">
            <!-- Form Element sizes -->
            <div class="card card-success">
              <div class="card-header">
                <h3 class="card-title">Assurance</h3> {% if is_granted('ROLE_ADMIN') %}<a  data-bs-toggle="modal" data-bs-target="#addAssuranceModal" aria-label="Ajouter une assurance"style="float: right;" class="btn btn-primary"><i class="fa-regular fa-calendar-plus"></i></a>  {% endif %}
                
              </div>
              <div class="card-body">


    <table  class="table table-striped"  id="example1" >
        <thead>
            <tr>
                <th>Type</th>
                <th>Engin</th>
                <th>Numéro</th>
                <th>Début</th>
                <th>Fin</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
        {# Définir les dates pour la gestion des couleurs #}
        {% set today = 'now'|date('Y-m-d') %}
        {% set warning_threshold = 'now +15 days'|date('Y-m-d') %}
        

        {# Tri des assurances par date de fin, en plaçant les dates null à la fin #}
        {% for assurance in assurances|sort((a, b) => (a.fin ?? '9999-12-31') <=> (b.fin ?? '9999-12-31')) %}
            {% set date_fin = assurance.fin ? assurance.fin|date('Y-m-d') : '' %}
            <tr 
                {% if date_fin and date_fin < today %} style="background-color:rgb(220, 29, 29); color: white;" {% endif %}
                {% if date_fin and date_fin >= today and date_fin <= warning_threshold %} style="background-color:rgb(166, 130, 139);" {% endif %}
            >
                <td>
                    {% if assurance.vehicule %}
                        Véhicule
                    {% elseif assurance.moto %}
                        Moto
                    {% else %}
                        Non défini
                    {% endif %}
                </td>
                <td>
                    {% if assurance.vehicule %}
                       {{ assurance.vehicule }} 
                    {% elseif assurance.moto %}
                        {{ assurance.moto }} 
                    {% else %}
                        Non défini
                    {% endif %}
                </td>
                <td>{{ assurance.Numero }}</td>
                <td>{{ assurance.debut ? assurance.debut|date('Y-m-d') : '' }}</td>
                <td>
                    {% if date_fin and date_fin < today %}
                        <strong>Expirée ({{ date_fin }})</strong>
                    {% elseif date_fin and date_fin >= today and date_fin <= warning_threshold %} 
                                <strong> ({{ date_fin }})  {# {{ date_fin  - today }} #} </strong>
                    {% else %}
                        {{ date_fin }} 
                    {% endif %}
                    
                </td>
                <td>
                    {#<a href="{{ path('app_assurance_show', {'id': assurance.id}) }}">show</a>#}
                    <a href="#" class="btn btn-warning edit-btn" data-id="{{ assurance.id }}">
                        <i class="fas fa-edit"></i> 
                    </a>
                    <a class="btn">{{ include('assurance/_delete_form.html.twig') }}</a>
                </td>
            </tr>
        {% else %}
            <tr>
                <td colspan="5">Aucun enregistrement trouvé</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
    </div>
              <!-- /.card-body -->
         </div>
    </div>






    <!-- Bouton pour ouvrir le modal -->
    {#<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addAssuranceModal" aria-label="Ajouter une assurance">
        Ajouter une assurance
    </button>#}

    <!-- Modal Bootstrap pour l'ajout -->
    <div class="modal fade" id="addAssuranceModal" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalLabel">Ajouter une assurance</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Ajout d'un div pour les messages d'erreur -->
                    <div id="errorMessages" class="alert alert-danger" style="display: none;"></div>
                    
                     {{ form_start(form, {'attr': {'id': 'assuranceForm'}}) }}
                    {{ form_row(form.Numero) }}
                    {{ form_row(form.debut) }}
                    {{ form_row(form.fin) }}
                    {{ form_row(form.type) }}
                    <div id="vehicule-field" style="display: none;">
                        {{ form_row(form.vehicule) }}
                    </div>
                    <div id="moto-field" style="display: none;">
                        {{ form_row(form.moto) }}
                    </div>
                    {{ form_widget(form) }}
                    {{ form_end(form) }}
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                    <button type="button" class="btn btn-success" id="saveAssurance">Enregistrer</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal Bootstrap pour l'édition -->
    <div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editModalLabel">Modifier l'Assurance</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="editModalContent"></div> {# Le formulaire sera chargé ici #}
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Gestion de l'affichage des champs véhicule/moto
            const typeField = document.querySelector("#assurance_type");
            const vehiculeField = document.querySelector("#vehicule-field");
            const motoField = document.querySelector("#moto-field");
            const errorMessages = document.querySelector("#errorMessages");

            if (typeField && vehiculeField && motoField) {
                typeField.addEventListener("change", function () {
                    vehiculeField.style.display = "none";
                    motoField.style.display = "none";
                    
                    if (this.value === "vehicule") {
                        vehiculeField.style.display = "block";
                    } else if (this.value === "moto") {
                        motoField.style.display = "block";
                    }
                });
            }

            // Soumission du formulaire d'ajout
                        // Soumission du formulaire d'ajout
            document.getElementById('saveAssurance').addEventListener('click', function(event) {
                event.preventDefault();
                errorMessages.style.display = 'none';
                const form = document.getElementById('assuranceForm');
                const formData = new FormData(form);

                fetch("{{ path('app_assurance_index') }}", {
                    method: "POST",
                    body: formData,
                    headers: {
                        "X-Requested-With": "XMLHttpRequest"
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        window.location.reload();
                    } else {
                        errorMessages.style.display = 'block';
                        errorMessages.innerHTML = Array.isArray(data.errors) 
                            ? data.errors.join('<br>') 
                            : 'Une erreur est survenue';
                    }
                })
                .catch(error => {
                    errorMessages.style.display = 'block';
                    errorMessages.textContent = 'Une erreur est survenue lors de la communication avec le serveur';
                     window.location.reload();
                });
            });

            // Gestion de l'édition des assurances
            document.querySelectorAll(".edit-btn").forEach(button => {
                button.addEventListener("click", function (event) {
                    event.preventDefault();
                    const assuranceId = this.getAttribute("data-id");

                    fetch(`/assurance/${assuranceId}/edit`, {
                        headers: { "X-Requested-With": "XMLHttpRequest" }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.form) {
                            document.getElementById("editModalContent").innerHTML = data.form;
                            const editModal = new bootstrap.Modal(document.getElementById("editModal"));
                            editModal.show();
                        }
                    })
                    .catch(error => console.error("Erreur lors du chargement du formulaire :", error));
                });
            });

            // Soumission du formulaire d'édition en AJAX
            document.addEventListener("submit", function (event) {
                if (event.target && event.target.matches("#editAssuranceForm")) {
                    event.preventDefault();
                    const form = event.target;
                    const formData = new FormData(form);

                    fetch(form.action, {
                        method: "POST",
                        body: formData,
                        headers: { "X-Requested-With": "XMLHttpRequest" }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            alert("Assurance mise à jour avec succès !");
                            location.reload(); // Recharger la page après la modification
                        } else {
                            alert("Erreur : " + data.errors);
                        }
                    })
                    .catch(error => console.error("Erreur lors de la mise à jour :", error));
                }
            });
        });

        // Dans le callback après le chargement du formulaire d'édition
        document.getElementById('editModalContent').addEventListener('change', function(e) {
            if (e.target.id === 'assurance_type') {
                const type = e.target.value;
                document.getElementById('vehicule-field-edit').style.display = type === 'vehicule' ? 'block' : 'none';
                document.getElementById('moto-field-edit').style.display = type === 'moto' ? 'block' : 'none';
            }
        });




        
    </script>
{% endblock %}